/*
Deployment script for PINEWOOD_CUSTOMERS_APP

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PINEWOOD_CUSTOMERS_APP"
:setvar DefaultFilePrefix "PINEWOOD_CUSTOMERS_APP"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.LOCALSQL22\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.LOCALSQL22\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO


-- login creation for application use	
IF NOT EXISTS (SELECT name FROM sys.server_principals WHERE name = 'pinewoodusr')
	BEGIN
		CREATE LOGIN [pinewoodusr] WITH PASSWORD = 'grassHopper!2', DEFAULT_DATABASE = [master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF;
		print 'pinewoodusr login created successfully';

		-- add to 'sysadmin' role
		ALTER SERVER ROLE [sysadmin] ADD MEMBER [pinewoodusr];
		print 'pinewoodusr login added to required role successfully';
	END
else
	print 'pinewoodusr login already exists';
GO

GO
PRINT N'Creating Table [dbo].[customers]...';


GO
CREATE TABLE [dbo].[customers] (
    [Id]          INT                IDENTITY (100, 1) NOT NULL,
    [Key]         NVARCHAR (40)      NOT NULL,
    [TypeId]      SMALLINT           NOT NULL,
    [Title]       CHAR (4)           NULL,
    [FirstName]   NVARCHAR (40)      NULL,
    [LastName]    NVARCHAR (40)      NULL,
    [Email]       NVARCHAR (250)     NULL,
    [MobilePhone] NVARCHAR (20)      NULL,
    [IsDisabled]  BIT                NOT NULL,
    [IsLocked]    BIT                NOT NULL,
    [LockedOn]    DATETIMEOFFSET (7) NULL,
    [CreatedOn]   DATETIMEOFFSET (7) NOT NULL,
    [CreatedBy]   NVARCHAR (250)     NOT NULL,
    [ModifiedOn]  DATETIMEOFFSET (7) NOT NULL,
    [ModifiedBy]  NVARCHAR (250)     NOT NULL,
    CONSTRAINT [PK_customers] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[customers].[IX_customers_TypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_customers_TypeId]
    ON [dbo].[customers]([TypeId] ASC)
    INCLUDE([Id], [Key], [Title], [FirstName], [LastName], [Email], [MobilePhone], [IsDisabled], [IsLocked], [LockedOn], [ModifiedOn]);


GO
PRINT N'Creating Index [dbo].[customers].[IX_customers_Email]...';


GO
CREATE NONCLUSTERED INDEX [IX_customers_Email]
    ON [dbo].[customers]([Email] ASC)
    INCLUDE([Id], [Key], [TypeId], [Title], [FirstName], [LastName], [MobilePhone], [IsDisabled], [IsLocked], [LockedOn], [ModifiedOn]);


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_Key]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_Key] DEFAULT ('cstmr_'+Trim(lower(replace(CONVERT([nvarchar](40),newid()),'-','')))) FOR [Key];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_TypeId]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_TypeId] DEFAULT (1) FOR [TypeId];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_IsDisabled]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_IsDisabled] DEFAULT ((0)) FOR [IsDisabled];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_IsLocked]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_IsLocked] DEFAULT ((0)) FOR [IsLocked];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_CreatedOn]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_CreatedOn] DEFAULT (sysdatetimeoffset()) FOR [CreatedOn];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_CreatedBy]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_CreatedBy] DEFAULT ('system') FOR [CreatedBy];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_ModifiedOn]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_ModifiedOn] DEFAULT (sysdatetimeoffset()) FOR [ModifiedOn];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_ModifiedBy]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_ModifiedBy] DEFAULT ('system') FOR [ModifiedBy];


GO



GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
