/*
Deployment script for PINEWOOD_CUSTOMERS_APP

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PINEWOOD_CUSTOMERS_APP"
:setvar DefaultFilePrefix "PINEWOOD_CUSTOMERS_APP"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.LOCALSQL22\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.LOCALSQL22\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO


-- login creation for application use	
IF NOT EXISTS (SELECT name FROM sys.server_principals WHERE name = 'pinewoodusr')
	BEGIN
		CREATE LOGIN [pinewoodusr] WITH PASSWORD = 'grassHopper!2', DEFAULT_DATABASE = [master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF;
		print 'pinewoodusr login created successfully';

		-- add to 'sysadmin' role
		ALTER SERVER ROLE [sysadmin] ADD MEMBER [pinewoodusr];
		print 'pinewoodusr login added to required role successfully';
	END
else
	print 'pinewoodusr login already exists';
GO

GO
PRINT N'Creating Table [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [Id]          INT                IDENTITY (100, 1) NOT NULL,
    [Key]         NVARCHAR (40)      NOT NULL,
    [TypeId]      INT                NOT NULL,
    [Title]       CHAR (4)           NULL,
    [FirstName]   NVARCHAR (40)      NULL,
    [LastName]    NVARCHAR (40)      NULL,
    [Email]       NVARCHAR (250)     NULL,
    [MobilePhone] NVARCHAR (20)      NULL,
    [IsDisabled]  BIT                NOT NULL,
    [IsLocked]    BIT                NOT NULL,
    [LockedOn]    DATETIMEOFFSET (7) NULL,
    [CreatedOn]   DATETIMEOFFSET (7) NOT NULL,
    [CreatedBy]   NVARCHAR (250)     NOT NULL,
    [ModifiedOn]  DATETIMEOFFSET (7) NOT NULL,
    [ModifiedBy]  NVARCHAR (250)     NOT NULL,
    CONSTRAINT [PK_Customer] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[Customer].[IX_Customer_TypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Customer_TypeId]
    ON [dbo].[Customer]([TypeId] ASC)
    INCLUDE([Id], [Key], [Title], [FirstName], [LastName], [Email], [MobilePhone], [IsDisabled], [IsLocked], [LockedOn], [ModifiedOn]);


GO
PRINT N'Creating Index [dbo].[Customer].[IX_Customer_Email]...';


GO
CREATE NONCLUSTERED INDEX [IX_Customer_Email]
    ON [dbo].[Customer]([Email] ASC)
    INCLUDE([Id], [Key], [TypeId], [Title], [FirstName], [LastName], [MobilePhone], [IsDisabled], [IsLocked], [LockedOn], [ModifiedOn]);


GO
PRINT N'Creating Table [dbo].[CustomerType]...';


GO
CREATE TABLE [dbo].[CustomerType] (
    [Id]          INT                IDENTITY (101, 1) NOT NULL,
    [Name]        NVARCHAR (100)     NOT NULL,
    [Description] NVARCHAR (250)     NOT NULL,
    [OrderIndex]  INT                NOT NULL,
    [IsSystem]    BIT                NOT NULL,
    [IsDisabled]  BIT                NOT NULL,
    [CreatedOn]   DATETIMEOFFSET (7) NOT NULL,
    [CreatedBy]   NVARCHAR (100)     NOT NULL,
    [ModifiedOn]  DATETIMEOFFSET (7) NOT NULL,
    [ModifiedBy]  NVARCHAR (100)     NOT NULL,
    CONSTRAINT [PK_CustomerType] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[CustomerType].[IX_AccountType_Disabled]...';


GO
CREATE NONCLUSTERED INDEX [IX_AccountType_Disabled]
    ON [dbo].[CustomerType]([IsDisabled] ASC)
    INCLUDE([Id], [Name], [Description], [OrderIndex], [IsSystem], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]);


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_Key]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_Key] DEFAULT ('cstmr_'+Trim(lower(replace(CONVERT([nvarchar](40),newid()),'-','')))) FOR [Key];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_IsDisabled]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_IsDisabled] DEFAULT ((0)) FOR [IsDisabled];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_IsLocked]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_IsLocked] DEFAULT ((0)) FOR [IsLocked];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_CreatedOn]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_CreatedOn] DEFAULT (sysdatetimeoffset()) FOR [CreatedOn];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_CreatedBy]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_CreatedBy] DEFAULT ('system') FOR [CreatedBy];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_ModifiedOn] DEFAULT (sysdatetimeoffset()) FOR [ModifiedOn];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_ModifiedBy] DEFAULT ('system') FOR [ModifiedBy];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_Description]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_Description] DEFAULT ('') FOR [Description];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_OrderIndex]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_OrderIndex] DEFAULT ((0)) FOR [OrderIndex];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_IsSystem]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_IsSystem] DEFAULT ((0)) FOR [IsSystem];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_IsDisabled]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_IsDisabled] DEFAULT ((0)) FOR [IsDisabled];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_CreatedOn]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_CreatedOn] DEFAULT (sysdatetimeoffset()) FOR [CreatedOn];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_CreatedBy]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_CreatedBy] DEFAULT ('system') FOR [CreatedBy];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_ModifiedOn] DEFAULT (sysdatetimeoffset()) FOR [ModifiedOn];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerType_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CustomerType]
    ADD CONSTRAINT [DF_CustomerType_ModifiedBy] DEFAULT ('system') FOR [ModifiedBy];


GO
PRINT N'Creating Foreign Key [dbo].[FK_Customer_CustomerType]...';


GO
ALTER TABLE [dbo].[Customer] WITH NOCHECK
    ADD CONSTRAINT [FK_Customer_CustomerType] FOREIGN KEY ([TypeId]) REFERENCES [dbo].[Customer] ([Id]) ON DELETE CASCADE;


GO





-- drop temporary table if it exists
If OBJECT_ID('tempdb..#CustomerType_box') is not null
	begin
		drop table #CustomerType_box
	end;

-- get all the information into a temporary table
select * into #CustomerType_box from [dbo].[CustomerType] where 0 = 1;   -- (create table structure only)]

-- insert the new items into the temporary table
set identity_insert #CustomerType_box on;

begin tran

insert into #CustomerType_box 
	(
		[Id], 
		[Name], 
		[Description], 
		[OrderIndex], 
		[IsDisabled], 
		[CreatedOn], 
		[CreatedBy], 
		[ModifiedOn], 
		[ModifiedBy]
	)
values
	(1, 'Internal', 'Internal customer', 1, 0, sysdatetimeoffset(), 'system', sysdatetimeoffset(), 'system'), 
	(2, 'Business', 'Business customer', 2, 0, sysdatetimeoffset(), 'system', sysdatetimeoffset(), 'system'), 
	(3, 'Retail', 'Retail customer', 3, 0, sysdatetimeoffset(), 'system', sysdatetimeoffset(), 'system')

--rollback
commit;
set identity_insert #CustomerType_box off;
set identity_insert [dbo].[CustomerType] on;

-- merge items back into the physical table from the temp table
merge [dbo].[CustomerType] as dst
using
	(
		select [Id], [Name], [Description], [OrderIndex], [IsDisabled], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]
		from #CustomerType_box
	) as src
on dst.[Id] = src.[Id]
when not matched then
	insert 
	(
		[Id], 
		[Name], 
		[Description], 
		[OrderIndex],
		[IsDisabled], 
		[CreatedOn], 
		[CreatedBy], 
		[ModifiedOn], 
		[ModifiedBy]
	)

	values 
	(
		src.[Id], 
		src.[Name], 
		src.[Description], 
		src.[OrderIndex],
		src.[IsDisabled], 
		src.[CreatedOn], 
		src.[CreatedBy], 
		src.[ModifiedOn], 
		src.[ModifiedBy]
	)
when matched then
	update set
			dst.[ModifiedOn] = src.[ModifiedOn],
			dst.[ModifiedBy] = src.[ModifiedBy]
;

set identity_insert [dbo].[CustomerType] off;
drop table #CustomerType_box;
GO


GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Customer] WITH CHECK CHECK CONSTRAINT [FK_Customer_CustomerType];


GO
PRINT N'Update complete.';


GO
